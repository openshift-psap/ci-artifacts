ci_presets:
  # name of the presets to apply, or null if no preset
  name: null
  # list of names of the presets to apply, or a single name, or null if no preset
  names: null

  single:
    clusters.create.type: single

  keep:
    clusters.create.keep: true
    clusters.create.ocp.tags.Project: PSAP/RHODS/Pipelines/load-aware/home-dev
    clusters.create.ocp.tags.TicketId: 87

  light_cluster:
    clusters.create.ocp.deploy_cluster.target: cluster_light

  light:
    extends: [light_cluster]

  metal:
    clusters.sutest.is_metal: true
    clusters.driver.is_metal: true

  not_metal:
    clusters.sutest.is_metal: false
    clusters.driver.is_metal: false

  target_load_packing:
    load_aware.plugin: "TargetLoadPacking"

  load_variation_risk_balancing:
    load_aware.plugin: "LoadVariationRiskBalancing"

  # launch 30 build pods over 5 minutes according to the poisson distribution
  small_poisson_load:
    load_aware.scale_test.distribution: "poisson"
    load_aware.scale_test.duration: 300.0
    load_aware.scale_test.instances: 30

  # launch 90 build pods over 10 minutes according to the normal distribution
  medium_normal_load:
    load_aware.scale_test.distribution: "normal"
    load_aware.scale_test.duration: 600.0
    load_aware.scale_test.instances: 90

secrets:
  dir:
    name: psap-ods-secret
    env_key: PSAP_ODS_SECRET_PATH
  # name of the file containing the properties of LDAP secrets
  s3_ldap_password_file: s3_ldap.passwords
  keep_cluster_password_file: get_cluster.password
  brew_registry_redhat_io_token_file: brew.registry.redhat.io.token
clusters:
  create:
    type: single # can be: single, ocp, managed
    keep: false
    name_prefix: load-aware-ci
    ocp:
      # list of tags to apply to the machineset when creating the cluster
      tags:
        TicketId: "115"
        Project: PSAP/RHODS/Pipelines/load-aware/ci-dev
      deploy_cluster:
        target: cluster
      base_domain: psap.aws.rhperfscale.org
      version: 4.12.12
      region: us-west-2
      control_plane:
        type: m6a.xlarge
      workers:
        type: m6a.2xlarge
        count: 2
      compute:
        type: m6i.2xlarge

  sutest:
    is_metal: false
    lab:
      name: null
    compute:
      dedicated: true
      machineset:
        name: rhods-pipelines
        count: null
        taint:
          key: only-rhods-pipelines
          value: "yes"
          effect: NoSchedule
  driver:
    is_metal: false
    compute:
      dedicated: true
      machineset:
        name: test-pods
        count: null
        taint:
          key: only-test-pods
          value: "yes"
          effect: NoSchedule
  cleanup_on_exit: false
load_aware:
  log_level: 1
  plugin: "TargetLoadPacking"
  default_requests_cpu: "2000m"
  default_target_requests_multiplier: "2"
  target_utilization: 70
  safe_variance_margin: 1
  safe_variance_sensitivity: 2
  scale_test:
    distribution: "poisson"
    duration: 60.0
    instances: 10
    namespace: "load-aware"
  tests:
  - default
  - trimaran
matbench:
  preset: null
  workload: load-aware
  config_file: load-aware.yaml
  download:
    mode: prefer_cache
    url:
    url_file:
    # if true, copy the results downloaded by `matbench download` into the artifacts directory
    save_to_artifacts: false
  ignore_exit_code: true
  # directory to plot. Set by testing/common/visualize.py before launching the visualization
  test_directory: null
