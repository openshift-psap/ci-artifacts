#!/bin/bash -e
#
# This file serves as the default command to the openshift-ansible image.
# Runs a playbook with inventory as specified by environment variables.
#
# SOURCE and HOME DIRECTORY: /opt/ci-artifacts/src

echo "===> Running PSAP CI Test suite <==="

set -o pipefail
set -o errexit
set -o nounset

if [[ -z "${KUBECONFIG}" ]]
then
    echo "No KUBECONFIG set, cannot continue."
    exit 1
fi
if [[ ! -e "${KUBECONFIG}" ]]
then
    echo "KUBECONFIG file doesn't exist, can't continue. ($KUBECONFIG)"
    exit 1
fi
echo "Kubeconfig found at ${KUBECONFIG}, proceeding with tests"

if ! which oc &>/dev/null;
then
    echo "OpenShift client not found, downloading it ..."
    mkdir bin -p
    cd bin
    wget --quiet https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-client-linux.tar.gz
    tar xvf openshift-client-linux.tar.gz
    rm openshift-client-linux.tar.gz
    export PATH=$PWD:$PATH
    cd ..
fi

if [[ "${INSIDE_CI_IMAGE:-}" == "y" ]]; then
    echo "===> $0 $@ <=="

    git show --quiet || echo "Could not access git history ..."
    echo
    oc version
    echo

    PSAP_ENTITLEMENT=/var/run/psap-entitlement-secret
    echo "===> Apply entitlement manifests from ${PSAP_ENTITLEMENT}<=="

    oc create -f ${PSAP_ENTITLEMENT} && sleep 300

    OCP_VERSION="$(oc version -o json | jq --raw-output '.openshiftVersion' | cut -b-3)"
    ANSIBLE_OPTS="-vvv"
    ANSIBLE_OPTS="$ANSIBLE_OPTS -e openshift_release=$OCP_VERSION"
fi

[[ "${INSIDE_CI_IMAGE:-}" == "y" ]] && set -x

ANSIBLE_OPTS=${ANSIBLE_OPTS:--v}

INVENTORY_ARG="-i inventory/hosts"

case ${1:-} in
    "gpu-ci")
	exec ansible-playbook ${INVENTORY_ARG} ${ANSIBLE_OPTS} playbooks/nvidia-gpu-operator-ci.yml
	;;
    "psap-ci")
	exec ansible-playbook ${INVENTORY_ARG} ${ANSIBLE_OPTS} playbooks/openshift-psap-ci.yml
	;;
    -*)
        echo "Unknown option: ${1:-}"
        exit 1
        ;;
    *)
	;;
esac

exit 0
