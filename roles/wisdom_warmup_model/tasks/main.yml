---
- name: Create the src directory
  file:
    path: "{{ artifact_extra_logs_dir }}/src"
    state: directory
    mode: '0755'

- name: Delete the entrypoint ConfigMap if it already exists
  command: oc delete --ignore-not-found configmap/wisdom-warmup-entrypoint -n {{ wisdom_warmup_model_namespace }}

- name: Create the entrypoint ConfigMap
  command: oc create configmap wisdom-warmup-entrypoint --from-file {{ wisdom_warmup_entrypoint }} -n {{ wisdom_warmup_model_namespace }}

- name: Define the test image
  set_fact:
    wisdom_tester_image: image-registry.openshift-image-registry.svc:5000/{{ wisdom_warmup_model_namespace }}/{{ wisdom_warmup_model_tester_imagestream_name }}:{{ wisdom_warmup_model_tester_image_tag }}

# Put wisdom protos in a secret
- name: Delete the protos secret if it already exists
  command: oc delete secret/wisdom-protos --ignore-not-found -n {{ wisdom_warmup_model_namespace }}

- name: Create the wisdom protos Secret
  shell: oc create secret generic wisdom-protos --from-file=$(echo {{ wisdom_warmup_model_protos_path }}/* | tr ' ' ,) -n {{ wisdom_warmup_model_namespace }} --dry-run=client -oyaml | oc apply -f -
  
- name: Apply the warmup Pod template
  template:
    src: "{{ wisdom_warmup_pod_template }}"
    dest: "{{ artifact_extra_logs_dir }}/src/000_wisdom_warmup_pod.yml"
    mode: 0400

- name: Delete the wisdom warmup Pod if it exists
  command: oc delete  --ignore-not-found -f "{{ artifact_extra_logs_dir }}/src/000_wisdom_warmup_pod.yml" -n {{ wisdom_warmup_model_namespace }}

- name: Create the wisdom warmup Pod if it exists
  command: oc create -f "{{ artifact_extra_logs_dir }}/src/000_wisdom_warmup_pod.yml" -n {{ wisdom_warmup_model_namespace }}

# Wait for wisdom modelmesh Pods to all load the model.
- name: Wait for wisdom model mesh Pods to be ready
  block:
  # Iterate through each modelmesh Pod and verify that the model is taking up more space than 0 GB.
  # This means that it is loading/loaded.
  - name: Ensure that wisdom model mesh deployment is ready
    shell: |
      set -o errexit
      set -o pipefail
      set -o nounset
      set -o errtrace
      set -x
      for pod in $(oc get pod -oname -n {{ wisdom_warmup_model_namespace }}  | grep 'modelmesh-serving'); do
          if oc exec -n {{ wisdom_warmup_model_namespace }}  $pod -c puller -- du -h -s /models | grep -q '^0\s'; then
            echo "At least one wisdom Pod ($pod) still hasn't loaded the model"
            exit 1
          fi
      done
    register: model_loaded
    until:
    - model_loaded.rc == 0
    - not model_loaded.stdout
    retries: 15
    delay: 30

- name: Delete the wisdom warmup Pod if it exists
  command: oc delete  --ignore-not-found=true -f "{{ artifact_extra_logs_dir }}/src/000_wisdom_warmup_pod.yml" -n {{ wisdom_warmup_model_namespace }}
