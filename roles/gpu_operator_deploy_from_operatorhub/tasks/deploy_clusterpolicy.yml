---
- name: Wait for the GPU Operator OperatorHub ClusterServiceVersion name
  command:
    oc get ClusterServiceVersion
       -l operators.coreos.com/gpu-operator-certified.openshift-operators
       -oname
       -n openshift-operators
  register: gpu_operator_csv_name_cmd
  until: gpu_operator_csv_name_cmd.stdout != ""
  retries: 15
  delay: 30

- block:
  - name: Wait for the GPU Operator ClusterPolicy CRD to appear
    command: oc get crd clusterpolicies.nvidia.com
    register: has_clusterpolicy_crd
    until: has_clusterpolicy_crd.rc != 1
    retries: 20
    delay: 15

  rescue:
  - name: Inspect the Subscriptions status (debug)
    shell:
      (oc get subscriptions.operators.coreos.com -n openshift-operators &&
       oc describe subscriptions.operators.coreos.com/gpu-operator-certified -n openshift-operators)
       > {{ artifact_extra_logs_dir }}/gpu_operator_Subscription.log
    failed_when: false

  - name: Get the ClusterServiceVersion status (debug)
    shell:
      (oc get ClusterServiceVersion -A &&
       oc describe "{{ gpu_operator_csv_name_cmd.stdout }}" -n openshift-operators)
       > {{ artifact_extra_logs_dir }}/gpu_operator_ClusterServiceVersion.log
    failed_when: false

  - name: Failing because the ClusterPolicy CR cannot be created
    fail: msg="Failed because the ClusterPolicy CR cannot be created"

- name: Get the clusterpolicy of the GPU Operator from OperatorHub CSV
  shell:
    set -o pipefail;
    oc get "{{ gpu_operator_csv_name_cmd.stdout }}"
       -n openshift-operators
       -ojson
    | jq -r '.metadata.annotations."alm-examples"'
    | jq .[0] > "{{ artifact_extra_logs_dir }}/gpu_operator_clusterpolicy.json"

- name: Create the clusterPolicy CR for the GPU Operator
  command: oc apply -f "{{ artifact_extra_logs_dir }}/gpu_operator_clusterpolicy.json"

- name: Get the GPU Operation version
  include_role:
    name: gpu_operator_get_csv_version

- name: Create the namespace for the GPU Operator (only < v1.7.0)
  when: gpu_operator_version is version("1.7.0", "<")
  block:
  - name: Create the namespace for the GPU Operator
    command: oc apply -f "{{ gpu_operator_namespace }}"
