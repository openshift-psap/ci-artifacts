---
- name: Get RHODS dashboard route host
  command: oc get route/rhods-dashboard -n redhat-ods-applications -ojsonpath={.spec.host}
  register: rhods_dashboard_hostname_cmd

- name: Wait for RHODS dashboard to be ready
  shell:
    curl -Ssf --insecure "https://{{ rhods_dashboard_hostname_cmd.stdout }}" || true
  args:
    warn: false # don't warn about using curl here
  register: wait_ods_dashboard
  until: '"The requested URL returned error: 403" in wait_ods_dashboard.stderr'
  retries: 40
  delay: 60

- name: Get JupyterLab route host
  command: oc get route/jupyterhub -n redhat-ods-applications -ojsonpath={.spec.host}
  register: jupyterlab_hostname_cmd

- block:
  - name: Wait for JupyterLab to be ready
    shell:
      set -o pipefail;
      curl -Ssf --insecure --verbose https://{{ jupyterlab_hostname_cmd.stdout }} |& grep '< HTTP/1'
    args:
      warn: false # don't warn about using curl here
    register: wait_jupyterlab
    until: '"302 Found" in wait_jupyterlab.stdout'
    retries: 40
    delay: 60
  rescue:
  - name: Capture JupiterHub curl output
    command:
      curl -Ssf --insecure --verbose https://{{ jupyterlab_hostname_cmd.stdout }}
    args:
      warn: false # don't warn about using curl here
  - name: fail
    fail: msg="JupyterHub didn't get ready"

- name: Wait for RHODS images to be loaded
  shell:
    set -o pipefail;
    oc get istag -n redhat-ods-applications -oname
       | cut -d/ -f2 | grep "{{ item }}"
  register: has_rhods_image
  until: has_rhods_image.rc == 0
  retries: 40
  delay: 60
  loop: "{{ rhods_wait_ods_images.split(',') }}"
