---
- name: Find a node with our NTO/TuneD fuse label
  command: oc get nodes -l "{{ tuned_module_fuse_label }}" -oname
  register: fuse_nodes

- name: Find a worker node to label for loading the fuse module with NTO/TuneD
  command: oc get nodes -l node-role.kubernetes.io/worker -oname
  when: not fuse_nodes.stdout
  register: worker_nodes

- name: Mark the node with our NTO/TuneD fuse label
  command: oc label "{{ worker_nodes.stdout_lines[0] }}" "{{ tuned_module_fuse_label }}="
  when: not fuse_nodes.stdout

- name: Apply NTO/TuneD fuse module profile manifest
  command: oc apply -f "{{ tuned_module_fuse }}"

- name: Apply the CI utils manifest
  command: oc apply -f "{{ gpu_operator_ci_utils }}"

- name: Authorize 'ns/gpu-operator-ci' Pods to access ns/gpu-operator-ci-utils images
  command:
    oc policy add-role-to-user
              system:image-puller system:serviceaccount:gpu-operator-ci:default
              --namespace=gpu-operator-ci-utils

- name: Apply the namespace manifest
  command: oc apply -f "{{ gpu_operator_namespace }}"

- name: Apply the imagestream manifest
  command: oc apply -f "{{ gpu_operator_imagestream }}"

- name: Apply the image helper builder manifest
  command: oc apply -f "{{ gpu_operator_helper_image_builder }}"

- block:
  - name: Wait for the helper image to be built
    shell:
      set -o pipefail;
      oc get pod -lopenshift.io/build.name
                 --field-selector=status.phase=Succeeded
                 --no-headers
                 -oname
                 -n gpu-operator-ci-utils
      | grep helper-image-builder
    register: wait_helper_image
    until: wait_helper_image.rc != 1
    retries: 40
    delay: 30
  rescue:
  - name: Get info about the helper image build failure
    command: oc get pods -n gpu-operator-ci-utils
    failed_when: false

  - name: Get the logs of the helper image build failure
    command: oc logs bc/helper-image-builder -n gpu-operator-ci-utils
    failed_when: false

  - name: Get the description of the helper image build failure
    command: oc describe build/helper-image-builder-1 -n gpu-operator-ci-utils
    failed_when: false

  - name: Suggest how to retry the build
    debug: msg="To retry the build, run 'oc new-build bc/helper-image-builder -n gpu-operator-ci-utils'"

  - name: Fail because the custom operator image failed to build
    fail: msg="Fail because the custom operator image failed to build"


- name: Apply the operator image builder script manifest
  command: oc apply -f "{{ gpu_operator_image_builder_script }}"

- block:
    - name: Find the name of the builder-dockercfg secret
      shell: oc get secrets -oname -n gpu-operator-ci | cut -d/ -f2 | grep builder-dockercfg
      register: builder_secret
  rescue:
    - name: Failed to find the builder-dockercfg secret
      fail: msg="No builder-dockercfg secret in the 'gpu-operator-ci' namespace ..."


- name: Delete the operator image builder pod, if any
  command: oc delete -f "{{ gpu_operator_image_builder_pod }}" --ignore-not-found=true

- name: Check if the operator image already exists
  command: oc get "imagestreamtag/gpu-operator-ci:{{ gpu_operator_image_tag }}" -n gpu-operator-ci
  failed_when: false
  register: has_operator_image

- name: Build the operator image
  when: has_operator_image.rc != 0
  block:
  - name: The operator image does not exist, build it
    debug: msg="The operator image does not exist, build it"

  - name: Apply the operator image builder pod manifest
    shell:
      sed 's|{{ '{{' }} builder_secret {{ '}}' }}|{{ builder_secret.stdout }}|' "{{ gpu_operator_image_builder_pod }}"
      | sed 's|{{ '{{' }} gpu_operator_git_repo {{ '}}' }}|{{ gpu_operator_git_repo }}|'
      | sed 's|{{ '{{' }} gpu_operator_git_ref {{ '}}' }}|{{ gpu_operator_git_ref }}|'
      | sed 's|{{ '{{' }} gpu_operator_image_tag {{ '}}' }}|{{ gpu_operator_image_tag }}|'
      | oc apply -f-
    args:
      warn: false # don't warn about using sed here

  - block:
    - name: Wait for the operator image to be built
      command:
        oc get pod/operator-image-builder-pod
           --no-headers
           -ocustom-columns=phase:status.phase
           -n gpu-operator-ci
      register: wait_image_builder_pod
      until: "'Succeeded' in wait_image_builder_pod.stdout or 'Failed' in wait_image_builder_pod.stdout or 'Error' in wait_image_builder_pod.stdout"
      retries: 40
      delay: 30

    - name: Fail if the operator image failed to be built
      when: "'Failed' in wait_image_builder_pod.stdout or 'Error' in wait_image_builder_pod.stdout"
      fail: msg="The operator image failed to build"

    rescue:
    - name: Get info about the operator image build failure (debug)
      command: oc get pods -n gpu-operator-ci
      failed_when: false

    - name: Get the logs of image build failure (debug)
      command: oc logs pod/operator-image-builder-pod -n gpu-operator-ci
      failed_when: false

    - name: Fail because the operator image failed to build
      fail: msg="Fail because the operator image failed to build"
