- name: Ensure the NFD package is available
  block:
  - name: Capture the state of the CatalogSource/redhat-operators (debug)
    command:
      oc get -oyaml CatalogSource/redhat-operators
         -n openshift-marketplace
         '-ojsonpath={.status.connectionState.lastObservedState}{"\n"}'
    failed_when: false

  - name: Ensure that the NFD Operator PackageManifest exists
    command: oc get packagemanifests/nfd -n openshift-marketplace
    failed_when: false
    register: nfd_package_available

  - name: Wait for the NFD to be available or its catalog to be fully populated
    when: nfd_package_available.rc != 0
    shell:
      oc get packagemanifests/nfd -n openshift-marketplace
         ||
      test $(oc get -oyaml CatalogSource/redhat-operators
                -n openshift-marketplace
                '-ojsonpath={.status.connectionState.lastObservedState}{"\n"}') == "READY"
    register: nfd_package_wait
    until: nfd_package_wait.rc == 0
    retries: 15
    delay: 30

  - name: Ensure that the NFD Operator PackageManifest exists
    command: oc get packagemanifests/nfd -n openshift-marketplace

  rescue:
  - name: Mark the failure as flake
    shell:
      echo "Failed because of the NFD Operator packagemanifest not available"
           > "{{ artifact_dir }}/FLAKE"

  - name: Failing because of previous error
    fail: msg="Failing because of the NFD Operator packagemanifest not available"

- name: Save the NFD Operator PackageManifest (debug)
  shell:
    oc get packagemanifests/nfd -n openshift-marketplace -oyaml
       > {{ artifact_extra_logs_dir }}/nfd_packagemanifest.yml
  failed_when: false

- name: Create the namespace for the NFD Operator
  command: oc apply -f "{{ nfd_operator_namespace }}"

- name: Create the OperatorGroup object
  command: oc apply -f "{{ nfd_operator_operatorgroup }}"

- name: "Create the OperatorHub subscription for the NFD Operator (nfd_channel = {{ nfd_channel }})"
  shell:
    set -o pipefail;
    sed 's|{{ '{{' }} nfd_channel {{ '}}' }}|{{ nfd_channel }}|' "{{ nfd_operator_operatorhub_sub }}"
      | oc apply -f-
  args:
    warn: false # don't warn about using sed here

- name: Wait for the NFD Operator OperatorHub ClusterServiceVersion
  block:
  - name: Use different methods for OCP 4.5 vs more recent
    block:
    - name: Use 'rescue' block for OCP 4.5
      when: openshift_release == "4.5"
      fail: msg="Label operators.coreos.com/nfd.openshift-nfd not available in OCP 4.5"

    - name: Wait for the NFD Operator OperatorHub ClusterServiceVersion (except v4.5)
      command:
        oc get ClusterServiceVersion
           -l operators.coreos.com/nfd.openshift-nfd
           -oname
           -n openshift-nfd
      register: nfd_operator_csv_name
      until: nfd_operator_csv_name.stdout != ""
      retries: 40
      delay: 30

    rescue:
    - name: Wait for the NFD Operator OperatorHub ClusterServiceVersion (only v4.5)
      when: openshift_release == "4.5"
      shell:
        set -o pipefail;
        oc get ClusterServiceVersion
           -oname
           -n openshift-nfd
           | grep /nfd
      register: nfd_operator_csv_name
      until: nfd_operator_csv_name.stdout != ""
      retries: 40
      delay: 30

  rescue:
  - name: List the ClusterServiceVersion in the openshift-nfd namespace (debug)
    command: oc get ClusterServiceVersion -n openshift-nfd

  - name: Store the YAML of the ClusterServiceVersion in the openshift-nfd namespace (debug)
    shell:
      oc get ClusterServiceVersion -n openshift-nfd -oyaml
         > {{ artifact_extra_logs_dir }}/openshift-nfd_ClusterServiceVersions.yml

  - name: Failed to find NFD Operator ClusterServiceVersion
    fail: msg="Failed to find NFD Operator ClusterServiceVersion"

- name: Get the clusterpolicy of the NFD Operator from OperatorHub CSV
  shell:
    set -o pipefail;
    oc get {{ nfd_operator_csv_name.stdout }}
       -n openshift-nfd
       -ojson
    | jq -r '.metadata.annotations."alm-examples"'
    | jq .[0]
    | jq --arg  ns openshift-nfd '.metadata.namespace = $ns'
    | jq --arg  ns openshift-nfd '.spec.namespace = $ns'
    > {{ artifact_extra_logs_dir }}/nfd_cr.json
  register: operatorhub_clusterpolicy
  until: operatorhub_clusterpolicy.rc == 0
  retries: 20
  delay: 15

- name: Create the NodeFeatureDiscovery CR for the NFD Operator
  block:
  - name: Create the NodeFeatureDiscovery CR
    command: oc apply -f "{{ artifact_extra_logs_dir }}/nfd_cr.json"
    register: apply_nfd_cr
    until: apply_nfd_cr.rc != 1
    retries: 20
    delay: 15
  rescue:
  - name: List the NFD subscription (debug)
    command: oc get subscriptions -n openshift-nfd
    failed_when: false

  - name: Describe the NFD subscription (debug)
    command: oc describe subscriptions/nfd -n openshift-nfd
    failed_when: false

  - name: List the ClusterServiceVersion status (debug)
    command: oc get ClusterServiceVersion -n openshift-nfd
    failed_when: false

  - name: Describe the ClusterServiceVersion status (debug)
    command: oc describe ClusterServiceVersion -n openshift-nfd
    failed_when: false

  - name: Failed when creating the NFD NodeFeatureDiscovery CR
    fail: msg="{{ apply_nfd_cr }}"
