# Which version/release of OpenShift? Include major version and major
# release, no minor releases.
openshift_release: '4.6'

# AWS deployment
use_aws: 'yes'
aws_check: '{{ use_aws }}'
aws_add_gpu_node: '{{ use_aws }}'

# Force reinstallation of all operators, CRDs, etc.?
force_reinstall: 'yes'

install_nfd_operator_from_hub: 'yes'
install_gpu_operator_from_hub: 'yes'    # nv_gpu role
install_gpu_operator_from_commit: 'yes' # nv_gpu_install_from_commit role

# user mode, set the behaviour of the playbook, available modes:
# - install: basic install of desired operators operators
# - uninstall: if installed, uninstall desired operators
# - ci: ci bot mode
# REQUIRED.
user_mode: 'ci'

# Set task timeout (in seconds). Default: 5 mins
task_timeout: '300'

# Set RHEL version. Default is RHEL 8. Set to RHEL 7 if using RHEL 7
rhel_version: '8'

# Set golang vars
GOROOT: '/usr/lib/golang'
GOPATH: '${HOME}/go"'
GOPROXY: 'https://proxy.golang.org'

# Test  NFD, SRO, ODH or all?
test_nfd: 'yes'
test_sro: 'yes'
test_odh: 'no'

# Undeploy the GPU-operator
# - from custom commit with helm (nv_gpu_install_from_commit role)
# - from OperatorHub (nv_gpu_role)
undeploy_gpu_operator: 'no'

# json raw template from running workers
gpu_machineset_template: "gpu_machineset_aws_template.json"

# AWS desired instance type
# Choose one from https://docs.aws.amazon.com/dlami/latest/devguide/gpu.html
gpu_instance_type: "g4dn.xlarge"

# library for machine type parsing
parse_machine_set: "roles/openshift_node/files/aws_machineset_json.sh"

# GPU definition file, Cloud agnostic key=values
gpu_machineset_def: "gpu_machineset_definition.json"
